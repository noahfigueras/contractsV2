import { digest, digest64 } from "@chainsafe/as-sha256";
export function hash(...inputs) {
    return digest(Buffer.concat(inputs));
}
/**
 * Verify that the given ``leaf`` is on the merkle branch ``proof``
 * starting with the given ``root``.
 */
export function verifyMerkleBranch(leaf, proof, depth, index, root) {
    let value = leaf;
    for (let i = 0; i < depth; i++) {
        if (Math.floor(index / 2 ** i) % 2) {
            value = digest64(Buffer.concat([proof[i], value]));
        }
        else {
            value = digest64(Buffer.concat([value, proof[i]]));
        }
    }
    return Buffer.from(value).equals(root);
}
//# sourceMappingURL=verifyMerkleBranch.js.map