/**
 * Fork code name in order of occurrence
 */
export var ForkName;
(function (ForkName) {
    ForkName["phase0"] = "phase0";
    ForkName["altair"] = "altair";
    ForkName["bellatrix"] = "bellatrix";
    ForkName["capella"] = "capella";
    ForkName["deneb"] = "deneb";
})(ForkName || (ForkName = {}));
/**
 * Fork sequence number in order of occurrence
 */
export var ForkSeq;
(function (ForkSeq) {
    ForkSeq[ForkSeq["phase0"] = 0] = "phase0";
    ForkSeq[ForkSeq["altair"] = 1] = "altair";
    ForkSeq[ForkSeq["bellatrix"] = 2] = "bellatrix";
    ForkSeq[ForkSeq["capella"] = 3] = "capella";
    ForkSeq[ForkSeq["deneb"] = 4] = "deneb";
})(ForkSeq || (ForkSeq = {}));
export function isForkLightClient(fork) {
    return fork !== ForkName.phase0;
}
export function isForkExecution(fork) {
    return isForkLightClient(fork) && fork !== ForkName.altair;
}
export function isForkWithdrawals(fork) {
    return isForkExecution(fork) && fork !== ForkName.bellatrix;
}
export function isForkBlobs(fork) {
    return isForkWithdrawals(fork) && fork !== ForkName.capella;
}
//# sourceMappingURL=forkName.js.map