export function isBlindedExecution(payload) {
    // we just check transactionsRoot for determinging as it the base field
    // that is present and differs from ExecutionPayload for all forks
    return payload.transactionsRoot !== undefined;
}
export function isBlindedBeaconBlock(block) {
    const body = block.body;
    return body !== undefined && isBlindedBeaconBlockBody(body);
}
export function isBlindedBeaconBlockBody(body) {
    return body.executionPayloadHeader !== undefined;
}
export function isBlindedSignedBeaconBlock(signedBlock) {
    return signedBlock.message.body.executionPayloadHeader !== undefined;
}
export function isBlockContents(data) {
    return data.kzgProofs !== undefined;
}
export function isSignedBlockContents(data) {
    return data.kzgProofs !== undefined;
}
export function isExecutionPayloadAndBlobsBundle(data) {
    return data.blobsBundle !== undefined;
}
//# sourceMappingURL=typeguards.js.map