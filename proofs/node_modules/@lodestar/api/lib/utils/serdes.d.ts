import { JsonPath } from "@chainsafe/ssz";
/**
 * Serialize proof path to JSON.
 * @param paths `[["finalized_checkpoint", 0, "root", 12000]]`
 * @returns `['["finalized_checkpoint",0,"root",12000]']`
 */
export declare function querySerializeProofPathsArr(paths: JsonPath[]): string[];
/**
 * Deserialize JSON proof path to proof path
 * @param pathStrs `['["finalized_checkpoint",0,"root",12000]']`
 * @returns `[["finalized_checkpoint", 0, "root", 12000]]`
 */
export declare function queryParseProofPathsArr(pathStrs: string | string[]): JsonPath[];
/**
 * Deserialize single JSON proof path to proof path
 * @param pathStr `'["finalized_checkpoint",0,"root",12000]'`
 * @returns `["finalized_checkpoint", 0, "root", 12000]`
 */
export declare function queryParseProofPaths(pathStr: string): JsonPath;
export type U64 = number;
export type U64Str = string;
export declare function fromU64Str(u64Str: U64Str): number;
export declare function toU64Str(u64: U64): U64Str;
export declare function fromU64StrOpt(u64Str: U64Str | undefined): U64 | undefined;
export declare function toU64StrOpt(u64: U64 | undefined): U64Str | undefined;
export declare function toGraffitiHex(utf8: string): string;
export declare function fromGraffitiHex(hex: string): string;
//# sourceMappingURL=serdes.d.ts.map