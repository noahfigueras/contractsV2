import { ssz } from "@lodestar/types";
/* eslint-disable @typescript-eslint/naming-convention */
export function allForksSignedBlockContentsReqSerializer(blockSerializer) {
    return {
        toJson: (data) => ({
            signed_block: blockSerializer(data.signedBlock).toJson(data.signedBlock),
            kzg_proofs: ssz.deneb.KZGProofs.toJson(data.kzgProofs),
            blobs: ssz.deneb.Blobs.toJson(data.blobs),
        }),
        fromJson: (data) => ({
            signedBlock: blockSerializer(data.signed_block).fromJson(data.signed_block),
            kzgProofs: ssz.deneb.KZGProofs.fromJson(data.kzg_proofs),
            blobs: ssz.deneb.Blobs.fromJson(data.blobs),
        }),
    };
}
export function allForksBlockContentsResSerializer(fork) {
    return {
        toJson: (data) => ({
            block: ssz.allForks[fork].BeaconBlock.toJson(data.block),
            kzg_proofs: ssz.deneb.KZGProofs.toJson(data.kzgProofs),
            blobs: ssz.deneb.Blobs.toJson(data.blobs),
        }),
        fromJson: (data) => ({
            block: ssz.allForks[fork].BeaconBlock.fromJson(data.block),
            kzgProofs: ssz.deneb.KZGProofs.fromJson(data.kzg_proofs),
            blobs: ssz.deneb.Blobs.fromJson(data.blobs),
        }),
    };
}
//# sourceMappingURL=routes.js.map