import { mapValues } from "@lodestar/utils";
import { getFastifySchema } from "../schema.js";
import { toColonNotationPath } from "../urlFormat.js";
export function getGenericJsonServer({ routesData, getReqSerializers, getReturnTypes }, config, api) {
    const reqSerializers = getReqSerializers(config);
    const returnTypes = getReturnTypes(config);
    return mapValues(routesData, (routeDef, routeId) => {
        const routeSerdes = reqSerializers[routeId];
        const returnType = returnTypes[routeId];
        return {
            // Convert '/states/{state_id}' into '/states/:state_id'
            url: toColonNotationPath(routeDef.url),
            method: routeDef.method,
            id: routeId,
            schema: routeSerdes.schema && getFastifySchema(routeSerdes.schema),
            handler: async function handler(req, resp) {
                const args = routeSerdes.parseReq(req);
                const data = (await api[routeId](...args));
                if (routeDef.statusOk !== undefined) {
                    resp.statusCode = routeDef.statusOk;
                }
                if (returnType) {
                    return returnType.toJson(data);
                }
                else {
                    return {};
                }
            },
        };
    });
}
//# sourceMappingURL=genericJsonServer.js.map