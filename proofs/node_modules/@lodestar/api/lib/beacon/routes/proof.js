import { fromHexString, toHexString } from "@chainsafe/ssz";
import { Schema, sameType } from "../../utils/index.js";
import { HttpStatusCode } from "../../utils/client/httpStatusCode.js";
/**
 * Define javascript values for each route
 */
export const routesData = {
    getStateProof: { url: "/eth/v0/beacon/proof/state/{state_id}", method: "GET" },
    getBlockProof: { url: "/eth/v0/beacon/proof/block/{block_id}", method: "GET" },
};
export function getReqSerializers() {
    return {
        getStateProof: {
            writeReq: (state_id, descriptor) => ({ params: { state_id }, query: { format: toHexString(descriptor) } }),
            parseReq: ({ params, query }) => [params.state_id, fromHexString(query.format)],
            schema: { params: { state_id: Schema.StringRequired }, query: { format: Schema.StringRequired } },
        },
        getBlockProof: {
            writeReq: (block_id, descriptor) => ({ params: { block_id }, query: { format: toHexString(descriptor) } }),
            parseReq: ({ params, query }) => [params.block_id, fromHexString(query.format)],
            schema: { params: { block_id: Schema.StringRequired }, query: { format: Schema.StringRequired } },
        },
    };
}
export function getReturnTypes() {
    return {
        // Just sent the proof JSON as-is
        getStateProof: sameType(),
        getBlockProof: sameType(),
    };
}
//# sourceMappingURL=proof.js.map