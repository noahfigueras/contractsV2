import { routesData, getReqSerializers, getReturnTypes } from "../routes/beacon/index.js";
import { generateGenericJsonClient, getFetchOptsSerializers } from "../../utils/client/index.js";
/**
 * REST HTTP client for beacon routes
 */
export function getClient(config, httpClient) {
    const reqSerializers = getReqSerializers(config);
    const returnTypes = getReturnTypes();
    // Some routes return JSON, use a client auto-generator
    const client = generateGenericJsonClient(routesData, reqSerializers, returnTypes, httpClient);
    const fetchOptsSerializer = getFetchOptsSerializers(routesData, reqSerializers);
    return {
        ...client,
        async getBlock(blockId, format) {
            if (format === "ssz") {
                const res = await httpClient.arrayBuffer({
                    ...fetchOptsSerializer.getBlock(blockId, format),
                });
                return {
                    ok: true,
                    response: new Uint8Array(res.body),
                    status: res.status,
                };
            }
            return client.getBlock(blockId, format);
        },
        async getBlockV2(blockId, format) {
            if (format === "ssz") {
                const res = await httpClient.arrayBuffer({
                    ...fetchOptsSerializer.getBlockV2(blockId, format),
                });
                return {
                    ok: true,
                    response: new Uint8Array(res.body),
                    status: res.status,
                };
            }
            return client.getBlockV2(blockId, format);
        },
    };
}
//# sourceMappingURL=beacon.js.map